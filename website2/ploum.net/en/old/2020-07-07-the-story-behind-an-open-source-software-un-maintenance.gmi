# The Story Behind an Open Source Software Un-Maintenance
=> files/old/krisna-iv-n9u9ZEoH2yM-unsplash-2.jpg

## How a broken screen kicked me out of developing an Open Source software and how the community revived it 6 years later

When I discovered the FLOSS world, at the dawn of this century, I thought developers were superheroes. Sort of semi-gods that achieved everything I wanted to do with my life like having their face displayed on planet.gnome.org, their name on the Wikipedia page describing their software or launching a free software company sold for millions. (Spoiler: I didn’t achieve the latter.) I was excited like a groupie when I could have a casual chat with Federico Mena Quintero or hang out with Michael Meeks.

I never understood why some successful developers suddenly disappeared and left their software un-maintained. I was shocked that some of them started to contribute to proprietary software. They had everything!

Without surprise, I followed that exact same path myself a few years later, without premeditation. All it took was for my laptop’s screen to break while I was giving a conference about, note the irony, Free Software.

But let’s tell things in order.

### Starting a FLOSS project

As a young R&D engineer in my mid-twenties, I quickly discovered the need for an organisational system in order to get things done. Inspired by the Getting Things Done book, I designed my own system but found no software to implement it properly. Most todo software was either too simplistic (useful only for groceries) or too complex (entering a task required to fill tenth of fields in an awful interface). To some extent, this is still the case today. No software managed to be simple and yet powerful, allowing you to take notes with your todos, to have a start date before which it would make no sense to work on the task or to have dependencies between tasks.

I decided to write my own software and convinced my lifelong friend Bertrand to join me. In the summer of 2009, we spent several days in his room drawing mockups on a white board. We wanted to get the UX right before any coding.

=> /206-getting-things-gnome-01-just-5-minutes-more/ wanted to get the UX right

Long story short: it looks like we did the right choices and the Getting Things GNOME! (yep, that was the name) quickly became popular. It was regularly cited in multiple Top 10 Ubuntu apps, widely popular in the Ubuntu app store. We even had many non-Linux users trying to port it to Windows because there was no equivalent. For the next four years, I would spend my nights coding, refactoring, developing and creating a community.

=> https://github.com/getting-things-gnome/ Getting Things GNOME!

The project started to attract lots of contributors and some of them, like Izidor and Parin, became friends. It was a beautiful experience. Last but not least, I switched to a day job which involved managing free software development with a team of rock stars developers. I was literally paid to attend FOSDEM or GUADEC and to work with colleagues I appreciated. And, yes, my head was on planet.gnome and GTG had its own Wikipedia page.

=> https://planet.gnome.org/ planet.gnome
=> https://fr.wikipedia.org/wiki/Getting_Things_Gnome GTG had its own Wikipedia page

### The great stall

Unfortunately, 2014 started with a lay-off at Lanedo, the company I was working for. I started being involved in the local startup scene. I was also giving conferences about Free Software. During one, the screen of my laptop suddenly stopped working. I was able to finish because of the projector, but my laptop was now requiring an external screen.

Being broke and jobless, I bought the cheaper laptop I could find. A Chromebook. With the Chromebook, I started investigating web services.

This is perhaps one of my biggest regrets: not having developed GTG as a webapp. If I had, things would probably have been very different. But I didn’t like web development. And still don’t like it today. In the end, it was not possible to code for GTG on the Chromebook.

After a few months, I landed a job at Elium. My friend and CEO Antoine convinced me to try a company Macbook instead of a Linux laptop. I agreed to do the test and started to dive into the Apple world.

=> http://elium.com Elium

I never found a Todo app that was as good as GTG so I started to try every new shiny (and expensive) thing. I used Evernote, Todoist, Things and many other. I wanted to be productive on my Mac. The Mac App Store helped by showering me in recommendations and new arrivals of fantastic productivity apps.

I didn’t want to acknowledge it but, in fact, I had suddenly abandoned GTG. I didn’t even have a working Linux computer.

I was not worried because there were many very skilled and motivated contributors, the main one being Izidor. What I didn’t imagine at the time was that Izidor went from being a bored student to a full-time Google employee with a real life outside free software.

A Free Software project needs more than developers. There’s a strong need for a « community animator ». Someone who will take decisions, who will communicate and be the heartbeat of the project. It’s a role often forgotten when done by the lead dev. I always was the main animator behind GTG, even at times when I was writing less code than other contributors. Something I didn’t realise at the time.

And while I spent 6 years exploring productivity on a Mac, GTG entered hibernation.

### Rebirth

Users were not happy. Especially one : Jeff, who was also a community contributor and is an open source expert. In 2019, he decided to get GTG back from the grave. Spoiler: he managed to do it. He became the heartbeat of GTG while a talented and motivated developer showed up to his call: Diego.

They managed to do an incredible amount of work and to release GTG 0.4. Long live to them! Video of GTG 0.4.

=> https://fortintam.com/blog/gtg-0-4-released/ to release GTG 0.4
=> https://www.youtube.com/watch?v=0u1hQxsIB1M Video of GTG 0.4

I didn’t write any code but helped as I could with my advice and my explanations of the code. It’s a strange feeling to see your own creation continuing in the hands of others. It makes me proud. Creating a software from scratch is hard. But living to see your software being developed by others is quite an accomplishment. I’m proud of what Diego and Jeff are doing. This is something unique to Open Source and I’m grateful to live it.

What is funny is that, at the same time Jeff called for a reboot of GTG, I went back to Linux, tired of all the bells and whistles of Apple. I was looking for simplicity, minimalism. It was also important for me to listen again to my moral values. I was missing free software.

In hindsight, I realise how foolish my quest of productivity was. I had spent 6 years developing a software to make me more productive. When I realised that and swore to not develop a productivity software anymore, I spent the next 6 years trying every new productivity gadget in order to find the perfect combo.

It was enough. Instead of trying to find tools to be productive, I decided to simply do what I always wanted to do. Write.

Changing my perspective led me to the awful realisation that people are not using tools because they are useful but because they are trendy. They rationalise afterward why they use the tool but tools are not made to fill real needs. Needs are, instead, created to justify the use of a fun tool. A few years ago, creating a project was all about « let’s create a Slack about the subject ». Last year it was Notions. This year it’s Airtable. When you have a hammer, everything looks like a nail.

After so many years developing and testing every productivity software out there, I can assure you that the best productivity system should, at the very least, not depend on complex app to access your data. By using Markdown files in a very simple and effective folder structure, I’m able to have the most productive system I ever had. A system that could have worked 12 years ago, a system that does not depend on a company or an open source developer. I don’t even need GTG nor GNOME anymore. I’m now working fully in Zettlr on Regolith with a pen and a Moleskine. I’m now able to focus on a couple of big projects at a time.

=> https://zettlr.com/ Zettlr
=> https://regolith-linux.org/ Regolith

Jeff would probably say that I evolved from a chaos warrior to a « goldsmith ». At least for the professional part because I can ensure you the parenting part is still fully on the chaos side. Nevertheless, the dedication of Jeff demonstrated that, with GTG, we created a tool which can become an essential part of chaos warrior’s productivity system. A tool which is useful without being trendy, even years after it was designed. A tool that people still want to use. A tool that they can adapt and modernise.

=> https://fortintam.com/blog/workers-typology-the-goldsmith-and-the-chaos-warrior/ from a chaos warrior to a « goldsmith ».

This is something incredible that can only happen with Open Source.

Thanks Bertrand, Izidor, Parin, Jeff, Diego and all the contributors for the ride. I’m sorry to have been one of those « floss maintainers that disappear suddenly » but proud to have been part of this adventure and incredibly happy to see that the story continues. Long live Getting Things GNOME!

=> https://wiki.gnome.org/Apps/GTG Getting Things GNOME!

Photo by krisna iv on Unsplash.

=> https://unsplash.com/@finesite?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText krisna iv
=> https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText Unsplash
